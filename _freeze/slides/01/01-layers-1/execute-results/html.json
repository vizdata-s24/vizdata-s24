{
  "hash": "4c1ea970c325723281cca2dfeec59765",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Deep dive into ggplot2 layers - I\nsubtitle: Lecture 1\ntitle-slide-attributes:\n  data-background-image: ../vizdata-bg.png\n  data-background-size: stretch\n  data-slide-number: none\nformat: revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\n---\n\n\n# Warm up\n\n## Announcements\n\n-   Office hours + locations finalized at [vizdata.org/course-team.html](https://vizdata.org/course-team.html).\n\n-   Don't forget to complete the getting to know you survey by 8pm today at the latest!\n\n-   A note on readings for this week: Some of it is review so feel free to skim those parts.\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1-4|6-7|9-16\"}\n# load packages\nlibrary(tidyverse)\nlibrary(openintro)\nlibrary(countdown)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7,        # 7\" width\n  fig.asp = 0.618,      # the golden ratio\n  fig.retina = 3,       # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300             # higher dpi, sharper image\n)\n```\n:::\n\n\n# A/B testing\n\n## Data: Sale prices of houses in Duke Forest {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n-   Data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020\n\n-   Scraped from Zillow\n\n-   Source: `openintro::duke_forest`\n:::\n\n::: {.column width=\"50%\"}\n![](images/duke_forest_home.jpg){fig-alt=\"Modernist house in Duke Forest\" fig-align=\"right\"}\n:::\n:::\n\n## `openintro::duke_forest`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(openintro)\n\nglimpse(duke_forest)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 98\nColumns: 13\n$ address    <chr> \"1 Learned Pl, Durham, NC 27705\", \"1616 Pinecrest Rd, Durham, NC 2770…\n$ price      <dbl> 1520000, 1030000, 420000, 680000, 428500, 456000, 1270000, 557450, 69…\n$ bed        <dbl> 3, 5, 2, 4, 4, 3, 5, 4, 4, 3, 4, 4, 3, 5, 4, 5, 3, 4, 4, 3, 3, 4, 3, …\n$ bath       <dbl> 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 3.0, 4.0,…\n$ area       <dbl> 6040, 4475, 1745, 2091, 1772, 1950, 3909, 2841, 3924, 2173, 2091, 249…\n$ type       <chr> \"Single Family\", \"Single Family\", \"Single Family\", \"Single Family\", \"…\n$ year_built <dbl> 1972, 1969, 1959, 1961, 2020, 2014, 1968, 1973, 1972, 1964, 1977, 196…\n$ heating    <chr> \"Other, Gas\", \"Forced air, Gas\", \"Forced air, Gas\", \"Heat pump, Other…\n$ cooling    <fct> central, central, central, central, central, central, central, centra…\n$ parking    <chr> \"0 spaces\", \"Carport, Covered\", \"Garage - Attached, Covered\", \"Carpor…\n$ lot        <dbl> 0.97, 1.38, 0.51, 0.84, 0.16, 0.45, 0.94, 0.79, 0.53, 0.73, 0.58, 0.5…\n$ hoa        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ url        <chr> \"https://www.zillow.com/homedetails/1-Learned-Pl-Durham-NC-27705/4998…\n```\n\n\n:::\n:::\n\n\n## A simple visualization\n\n::: panel-tabset\n## Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point(alpha = 0.7, size = 2) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.7) +\n  labs(\n    x = \"Area (square feet)\",\n    y = \"Sale price (USD)\",\n    title = \"Price and area of houses in Duke Forest\"\n  )\n```\n:::\n\n\n## Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## New variable: `decade_built`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nduke_forest <- duke_forest |>\n  mutate(decade_built = (year_built %/% 10) * 10)\n\nduke_forest |>\n  select(year_built, decade_built)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 98 × 2\n   year_built decade_built\n        <dbl>        <dbl>\n 1       1972         1970\n 2       1969         1960\n 3       1959         1950\n 4       1961         1960\n 5       2020         2020\n 6       2014         2010\n 7       1968         1960\n 8       1973         1970\n 9       1972         1970\n10       1964         1960\n# ℹ 88 more rows\n```\n\n\n:::\n:::\n\n\n## New variable: `decade_built_cat`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nduke_forest <- duke_forest |>\n  mutate(\n    decade_built_cat = case_when(\n      decade_built <= 1940 ~ \"1940 or before\",\n      decade_built >= 1990 ~ \"1990 or after\",\n      TRUE ~ as.character(decade_built)\n    )\n  )\n\nduke_forest |>\n  count(decade_built_cat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  decade_built_cat     n\n  <chr>            <int>\n1 1940 or before       8\n2 1950                26\n3 1960                32\n4 1970                11\n5 1980                13\n6 1990 or after        8\n```\n\n\n:::\n:::\n\n\n## A slightly more complex visualization\n\n::: panel-tabset\n## Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(\n  duke_forest,\n  aes(x = area, y = price, color = decade_built_cat)\n) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5, show.legend = FALSE) +\n  facet_wrap(~decade_built_cat) +\n  labs(\n    x = \"Area (square feet)\",\n    y = \"Sale price (USD)\",\n    color = \"Decade built\",\n    title = \"Price and area of houses in Duke Forest\"\n  )\n```\n:::\n\n\n## Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## A/B testing {.center}\n\n::: task\nIn the next two slides, the same plots are created with different \"cosmetic\" choices. Examine the plots two given (Plot A and Plot B), and indicate your preference by voting for one of them in the Vote tab.\n:::\n\n## Test 1\n\n::: panel-tabset\n## Plot A\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/bad-taste-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Plot B\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/better-taste-minimal-viridis-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Vote\n\n\n```{=html}\n<iframe frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/events/SJERMI/questions/65a60ed5cb175c309f397699\" width=\"100%\"></iframe>\n```\n\n:::\n\n## Test 2\n\n::: panel-tabset\n## Plot A\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Plot B\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/better-taste-gray-rainbow-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Vote\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/events/SJERMI/questions/65a60ee91afc5f38bc6e8a85\" width=\"100%\"></iframe>\n```\n\n:::\n\n# What makes figures bad?\n\n## Bad taste\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Data-to-ink ratio {.smaller}\n\nTufte strongly recommends maximizing the **data-to-ink ratio** this in the Visual Display of Quantitative Information (Tufte, 1983).\n\n::: columns\n::: {.column width=\"50%\"}\n> Graphical excellence is the well-designed presentation of interesting data---a matter of substance, of statistics, and of design ... \\[It\\] consists of complex ideas communicated with clarity, precision, and efficiency. ... \\[It\\] is that which gives to the viewer the greatest number of ideas in the shortest time with the least ink in the smallest space ... \\[It\\] is nearly always multivariate ... And graphical excellence requires telling the truth about the data. (Tufte, 1983, p. 51).\n:::\n\n::: {.column width=\"50%\"}\n![](images/tufte-visual-display-cover.png){fig-alt=\"Cover of The Visual Display of Quantitative Information\" width=\"400\"}\n:::\n:::\n\n## \n\n::: task\nWhich of the plots has a higher data-to-ink ratio?\n:::\n\n\n\n\n\n::: panel-tabset\n## Plot A\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/mean-area-decade-bar-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Plot B\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/mean-area-decade-scatter-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Vote\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/events/SJERMI/questions/65a60f09cb175c309f3977d7\" width=\"100%\"></iframe>\n```\n\n:::\n\n## A deeper look {.center}\n\n::: hand\nat the plotting code\n:::\n\n## Summary statistics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean_area_decade <- duke_forest |>\n  group_by(decade_built_cat) |>\n  summarise(mean_area = mean(area))\n\nmean_area_decade\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  decade_built_cat mean_area\n  <chr>                <dbl>\n1 1940 or before       2072.\n2 1950                 2545.\n3 1960                 2873.\n4 1970                 3413.\n5 1980                 2889.\n6 1990 or after        2822.\n```\n\n\n:::\n:::\n\n\n## Barplot\n\n::: panel-tabset\n## Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|5\"}\nggplot(\n  mean_area_decade,\n  aes(y = decade_built_cat, x = mean_area)\n) +\n  geom_col() +\n  labs(\n    x = \"Mean area (square feet)\", y = \"Decade built\",\n    title = \"Mean area of houses in Duke Forest, by decade built\"\n  )\n```\n:::\n\n\n## Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## Scaterplot\n\n::: panel-tabset\n## Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|5\"}\nggplot(\n  mean_area_decade,\n  aes(y = decade_built_cat, x = mean_area)\n) +\n  geom_point(size = 4) +\n  labs(\n    x = \"Mean area (square feet)\", y = \"Decade built\",\n    title = \"Mean area of houses in Duke Forest, by decade built\"\n  )\n```\n:::\n\n\n## Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=2100}\n:::\n:::\n\n:::\n\n## Lollipop chart -- a happy medium?\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Application exercise {.smaller}\n\n::: task\n-   Go to the course GitHub organization: <https://github.com/vizdata-s24>\n\n-   Clone the repo called `ae-01` and work on the exercise.\n\n    -   Note: For today, this is not a personalized repo for you. The repo is public so everyone can clone it, but you won't be able to push to it. Starting Thursday you'll start getting your personalized repos you can push to.\n\n-   Once you're done, share your code on Slack in #general.\n\n-   Label your chunk(s) and pay attention to code style and formatting!\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_16db71b2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Bad data\n\n::: panel-tabset\n## Original\n\n![](images/healy-democracy-nyt-version.png){fig-alt=\"Faceted plot showing the average importance of democracy in 6 countries over time.\" fig-align=\"center\" width=\"800\"}\n\n## Improved\n\n![](images/healy-democracy-voeten-version-2.png){fig-alt=\"Faceted plot showing the average importance of democracy in 6 countries over time.\" width=\"800\"}\n\n::: aside\nHealy, Data Visualization: A practical introduction. [Chapter 1](https://socviz.co/lookatdata.html). Figures 1.8 and 1.9.\n:::\n:::\n\n## Bad perception\n\n![](images/healy-perception-curves.png){fig-alt=\"Aspect ratios affect our perception of rates of change, modeled after an example by William S. Cleveland.\"}\n\n::: aside\nHealy, Data Visualization: A practical introduction. [Chapter 1](https://socviz.co/lookatdata.html). Figure 1.12.\n:::\n\n# Aesthetic mappings in ggplot2\n\n## A second look: lollipop chart\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/mean-area-decade-lollipop-layer-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(\n  mean_area_decade,\n  aes(y = decade_built_cat, x = mean_area)\n) +\n  geom_point(size = 4) +\n  geom_segment(aes(\n    x = 0, xend = mean_area,\n    y = decade_built_cat, yend = decade_built_cat\n  )) +\n  labs(\n    x = \"Mean area (square feet)\",\n    y = \"Decade built\",\n    title = \"Mean area of houses in Duke Forest, by decade built\"\n  )\n```\n:::\n\n:::\n\n## Activity: Spot the differences I {.smaller}\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-layers-1_files/figure-revealjs/mean-area-decade-lollipop-global-1.png){fig-align='center' width=2100}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(\n  mean_area_decade,\n  aes(y = decade_built_cat, x = mean_area)\n) +\n  geom_point(size = 4) +\n  geom_segment(aes(\n    xend = 0,\n    yend = decade_built_cat\n  )) +\n  labs(\n    x = \"Mean area (square feet)\",\n    y = \"Decade built\",\n    title = \"Mean area of houses in Duke Forest, by decade built\"\n  )\n```\n:::\n\n\n## Discussion\n\nCan you spot the differences between the code here and the one provided in the previous slide? Are there any differences in the resulting plot? Work in a pair (or group) to answer.\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/events/SJERMI/questions/65a60f67a84d3e76fff34d58\" width=\"100%\"></iframe>\n```\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_446da346\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Global vs. layer-specific aesthetics\n\n-   Aesthetic mappings can be supplied in the initial `ggplot()` call, in individual layers, or in some combination of both.\n\n-   Within each layer, you can add, override, or remove mappings.\n\n-   If you only have one layer in the plot, the way you specify aesthetics doesn't make any difference. However, the distinction is important when you start adding additional layers.\n\n## Activity: Spot the differences II {.smaller}\n\n::: task\nDo you expect the following plots to be the same or different? If different, how? Discuss in a pair (or group) without running the code and sketch the resulting plots based on what you think the code will produce.\n:::\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Plot A\nggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point(aes(color = decade_built_cat))\n```\n\n```{.r .cell-code}\n# Plot B\nggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point(color = \"blue\")\n```\n\n```{.r .cell-code}\n# Plot C\nggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point(color = \"#a493ba\")\n```\n:::\n\n\n## Discussion\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/events/SJERMI/questions/65a610521afc5f38bc6e9bab\" width=\"100%\"></iframe>\n```\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_82720671\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Wrap up\n\n::: task\nThink back to all the plots you saw in the lecture, without flipping back through the slides. Which plot first comes to mind? Describe it in words.\n:::\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/events/SJERMI/questions/65a6106c1afc5f38bc6e9d34\" width=\"100%\"></iframe>\n```\n",
    "supporting": [
      "01-layers-1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}